//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TraceUI.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.0.1.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("BurlyWood")]
        public global::System.Drawing.Color HoverHighlight {
            get {
                return ((global::System.Drawing.Color)(this["HoverHighlight"]));
            }
            set {
                this["HoverHighlight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SaddleBrown")]
        public global::System.Drawing.Color SymbolHoverHighlight {
            get {
                return ((global::System.Drawing.Color)(this["SymbolHoverHighlight"]));
            }
            set {
                this["SymbolHoverHighlight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Garamond, 12.75pt, style=Bold")]
        public global::System.Drawing.Font TheoremFont {
            get {
                return ((global::System.Drawing.Font)(this["TheoremFont"]));
            }
            set {
                this["TheoremFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Garamond, 12pt, style=Italic")]
        public global::System.Drawing.Font ProofFont {
            get {
                return ((global::System.Drawing.Font)(this["ProofFont"]));
            }
            set {
                this["ProofFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Garamond, 12pt, style=Bold")]
        public global::System.Drawing.Font StepFont {
            get {
                return ((global::System.Drawing.Font)(this["StepFont"]));
            }
            set {
                this["StepFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Garamond, 11.25pt, style=Bold")]
        public global::System.Drawing.Font LabelFont {
            get {
                return ((global::System.Drawing.Font)(this["LabelFont"]));
            }
            set {
                this["LabelFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 192, 192")]
        public global::System.Drawing.Color LinkHoverHighlight {
            get {
                return ((global::System.Drawing.Color)(this["LinkHoverHighlight"]));
            }
            set {
                this["LinkHoverHighlight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color VarWithAx {
            get {
                return ((global::System.Drawing.Color)(this["VarWithAx"]));
            }
            set {
                this["VarWithAx"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("192, 0, 0")]
        public global::System.Drawing.Color VarThisAx {
            get {
                return ((global::System.Drawing.Color)(this["VarThisAx"]));
            }
            set {
                this["VarThisAx"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Navy")]
        public global::System.Drawing.Color VarNoAx {
            get {
                return ((global::System.Drawing.Color)(this["VarNoAx"]));
            }
            set {
                this["VarNoAx"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20, 67, 21")]
        public global::System.Drawing.Color BoundVar {
            get {
                return ((global::System.Drawing.Color)(this["BoundVar"]));
            }
            set {
                this["BoundVar"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("F:\\TraceAI")]
        public string AIPath {
            get {
                return ((string)(this["AIPath"]));
            }
            set {
                this["AIPath"] = value;
            }
        }
    }
}
